name: Build & Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}

      # Build & push auth-service image
      - name: Build and push auth-service
        uses: docker/build-push-action@v4
        with:
          context: ./auth-service
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/auth-service:${{ github.sha }}

      # Build & push backend image
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }}

      # Build & push frontend image
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          target: production
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Create production docker-compose.yml with the correct image tags
      - name: Create production docker-compose.yml
        run: |
          cat > docker-compose.prod.yml << EOF
          version: '3.8'
          services:
            auth-service:
              image: ${{ secrets.ACR_LOGIN_SERVER }}/auth-service:${{ github.sha }}
              restart: always
            
            backend:
              image: ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }}
              restart: always
            
            frontend:
              image: ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}
              restart: always
          EOF

      # Deploy to Azure App Service
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.WEBAPP_NAME }}
          slot-name: Production
          images: |
            ${{ secrets.ACR_LOGIN_SERVER }}/auth-service:${{ github.sha }}
            ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }}
            ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}